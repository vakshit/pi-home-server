---
- name: Setup Ubuntu Server
  hosts: homeServer
  become: yes
  vars:
    cert_domain: photos.home.local
    cert_company: AkshitHome
    cert_email: akshitv18@gmail.com
    cert_location: Gurugram

  tasks:
    - name: Update and install software packages
      apt:
        name:
          - nginx
        state: latest
        update_cache: yes

    - name: Check if the self-signed certificate already exists
      stat:
        path: /etc/ssl/certs/nginx-selfsigned.crt
      register: ssl_cert

    - name: Generate a Self-Signed OpenSSL Certificate
      command: >
        openssl req -x509 -nodes -days 3650 -newkey rsa:4096
        -keyout /etc/ssl/certs/nginx-selfsigned.key
        -out /etc/ssl/certs/nginx-selfsigned.crt
        -subj "/C=IN/ST=UP/L={{ cert_location }}/O={{ cert_company }}/OU=IT/CN={{ cert_domain }}/emailAddress={{ cert_email }}"
      when: not ssl_cert.stat.exists
      become: yes

    - name: Check if the dhparam file already exists
      stat:
        path: /etc/ssl/certs/dhparam.pem
      register: dhparam_file

    - name: Generate strong Diffie-Hellman group
      command: openssl dhparam -dsaparam -out /etc/ssl/certs/dhparam.pem 4096
      when: not dhparam_file.stat.exists
      become: yes

    - name: Create nginx snippet for SSL
      copy:
        dest: "/etc/nginx/snippets/nginx-ssl.conf"
        content: |
          ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
          ssl_certificate_key /etc/ssl/certs/nginx-selfsigned.key;
        mode: "0644"

    - name: Create nginx SSL parameters config
      copy:
        dest: "/etc/nginx/snippets/ssl-params.conf"
        content: |
          ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
          ssl_prefer_server_ciphers on;
          ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
          ssl_ecdh_curve secp384r1;
          ssl_session_cache shared:SSL:10m;
          ssl_session_tickets off;
          ssl_stapling on;
          ssl_stapling_verify on;
          # resolver 8.8.8.8 8.8.4.4 valid=300s;
          # resolver_timeout 5s;
          # Disable preloading HSTS for now.  You can use the commented out header line that includes
          # the "preload" directive if you understand the implications.
          #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
          add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
          add_header X-Frame-Options DENY;
          add_header X-Content-Type-Options nosniff;

          ssl_dhparam /etc/ssl/certs/dhparam.pem;
        mode: "0644"

    - name: Create nginx site configuration for Home Server
      template:
        src: scripts/server.conf.j2
        dest: "/etc/nginx/sites-enabled/server.conf"

    - name: Remove default nginx site configuration
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent

    - name: Add Docker repository and install Docker
      include_tasks: docker.ansible.yml

    - name: Enable docker service
      systemd:
        name: docker
        enabled: yes
        state: restarted
        daemon_reload: yes

  handlers:
    - name: Restart nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes
