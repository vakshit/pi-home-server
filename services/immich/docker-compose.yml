name: server

include:
  - path: ../../core/network.yaml

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ${HOME_UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - ${HOME_ARCHIVE_PATH}:/usr/src/app/external/archive
      - ${HOME_ALBUM_PATH}:/usr/src/app/external/albums
      - ${HOME_ALBUM_AKSHIT_PATH}:/usr/src/app/external/albums_akshit
      - ${HOME_ALBUM_JIYA_PATH}:/usr/src/app/external/albums_jiya
    env_file:
      - .env
    environment:
      DB_HOSTNAME: ${HOME_DB_HOSTNAME}
      DB_USERNAME: ${HOME_DB_USERNAME}
      DB_DATABASE_NAME: ${HOME_DB_DATABASE_NAME}
      DB_PASSWORD: ${HOME_DB_PASSWORD}
      REDIS_DBINDEX: ${HOME_REDIS_DBINDEX}
    ports:
      - 2283:2283
    depends_on:
      - immich-redis
      - immich-database
    networks:
      - intranet
    restart: always
    healthcheck:
      disable: false

  pvt-immich-server:
    container_name: pvt_immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ${PVT_UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - ${PVT_ALBUM_PATH}:/usr/src/app/external/albums
    env_file:
      - .env
    environment:
      DB_HOSTNAME: ${PVT_DB_HOSTNAME}
      DB_USERNAME: ${PVT_DB_USERNAME}
      DB_DATABASE_NAME: ${PVT_DB_DATABASE_NAME}
      DB_PASSWORD: ${PVT_DB_PASSWORD}
      REDIS_DBINDEX: ${PVT_REDIS_DBINDEX}
    ports:
      - 2200:2283
    depends_on:
      - immich-redis
      - pvt-immich-database
    networks:
      - intranet
    restart: always
    healthcheck:
      disable: false

  pvt-immich-database:
    container_name: pvt_immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${PVT_DB_PASSWORD}
      POSTGRES_USER: ${PVT_DB_USERNAME}
      POSTGRES_DB: ${PVT_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${PVT_DB_DATA_LOCATION}:/var/lib/postgresql/data
    networks:
      - intranet
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: always


  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cuda # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    networks:
      - intranet
    restart: always
    healthcheck:
      disable: false

  immich-redis:
    container_name: immich_redis
    networks:
      - intranet
    image: docker.io/redis:6.2-alpine@sha256:905c4ee67b8e0aa955331960d2aa745781e6bd89afc44a8584bfd13bc890f0ae
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${HOME_DB_PASSWORD}
      POSTGRES_USER: ${HOME_DB_USERNAME}
      POSTGRES_DB: ${HOME_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${HOME_DB_DATA_LOCATION}:/var/lib/postgresql/data
    networks:
      - intranet
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: always
volumes:
  model-cache:
